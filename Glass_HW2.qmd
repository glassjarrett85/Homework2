---
title: "Assignment 2: Programming in Base R"
author: "Jarrett Glass"
format: html
---

## Task 1: Basic Vector Practice

1. Create two vectors. One vector corresponding to the `pre` measurements and one to the `post` measurements.

```{r}
# Vector of pre-treatment measurements:
pre <- c(120, 151, 125, 126, 115, 132, 132, 129, 134, 139, 127, 122, 127, 135, 133, 128, 147, 138, 140, 132)

# Vector of post-treatment measurements:
post <- c(127, 145, 135, 122, 115, 122, 123, 126, 126, 129, 132, 146, 120, 114, 121, 120, 128, 120, 133, 115)
```

2. Assign `names` to the vector elements using the `paste()` function. Note that `names()` can be overwritten by a character vector.

```{r}
names(pre) <- paste("Subject", 1:20, sep="_")
pre

names(post) <- paste("Subject", 1:20, sep="_")
post
```

3. Calculate the change in blood pressure for each patient by subtracting post-treatment measurements from pre-treatment measurements.

```{r}
# Change in measurements (no need to name these):
delta <- pre-post
delta
```

4. Calculate the average decrease in blood pressure across all patients.

```{r}
mean(delta)
```

5. Determine which patients expereicned a decrease in blood pressure after treatment (positive change).

```{r}
which(delta > 0)
```

6. Subset the vector of differences to only return those that have a positive change.

```{r}
delta[delta > 0]
```

7. Calculate the average decrease in blood pressure for those where the blood pressure decreased.

```{r}
mean(delta[delta > 0])
```

## Task 2: Basic Data Frame practice

1. Create a data frame object with four columns corresponding to your data above: `patient`, `pre_bp`, `post_bp`, and `diff_bp`.

```{r}
# Combine vectors above into a single dataframe. 
df <- data.frame(patient=1:20,
                 pre_bp=pre,
                 post_bp=post,
                 diff_bp=delta)
df
```

2. Return only rows of the data frame where the `diff_bp` column is negative.

```{r}
df[df$diff_bp < 0, ]
```

3. Add a new column to the data frame corresponding to `TRUE` if the `post_bp` is less than 120 and `FALSE` if it is not.

```{r}
# Will call this column IS_LOWER:
df$IS_LOWER <- df$post_bp < 120
knitr::kable(df)
```

## Task 3: List practice

We are now given pre- and post-treatment data for 10 new subjects.

1. Create a new data frame with this data in it that is similar to the data frame from task 2 (including the new colujmn of TRUE/FALSE values).

```{r}
# Declare new_df data frame with these new values directly:
new_df <- data.frame(
  pre_bp = c(138, 135, 147, 117, 152, 134, 114, 121, 131, 130),
  post_bp = c(105, 136, 123, 130, 134, 143, 135, 139, 120, 124))

# Provide names similar to the first data frame
rownames(new_df) <- paste("subject", 1:10, sep="_")

# Add diff_bp and IS_LOWER columns manually
new_df$diff_bp <- new_df$pre_bp - new_df$post_bp
new_df$IS_LOWER <- new_df$post_bp < 120
new_df
```

2. Create and store a list with two elements:
+ 1st element named `treatment` and contains the first data frame created above.
+ 2nd element named `placebo` with the second data frame.

```{r}
our_list <- list(treatment=df, placebo=new_df)
str(our_list)
```

3. Access the first list element using three different types of syntax.

```{r}
our_list$treatment
our_list[[1]]
our_list[["treatment"]]
```

4. Using the list from Question 2, access the `pre_bp` column of the `placebo` data frame in one line of code. 

```{r}
our_list$placebo$pre_bp
```